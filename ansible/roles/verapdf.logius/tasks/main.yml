# tasks file for verapdf.logius
---
- name: Create logius group
  group:
    name: "{{ logius_linux_group }}"
    state: present

- name: Create logius user
  user:
    name: "{{ logius_linux_user }}"
    groups:
      - "{{ logius_linux_group }}"
    createhome: no
    system: yes

- name: Clone git repository
  git:
    repo: "{{ logius_git_url }}"
    dest: "{{ logius_git_root }}"
    version: "{{ logius_git_branch }}"
    update: "{{ logius_git_update }}"

- name: Build Maven project
  command: mvn clean package
  args:
    chdir: "{{ logius_git_root }}"

- name: Create application install directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"
  with_items:
    - "{{ logius_app_bin }}"
    - "{{ logius_app_lib }}"
    - "{{ logius_app_conf }}"
    - "{{ logius_app_res }}"

- name: Create application log directory
  file:
    path: "{{ logius_log_dir }}"
    state: directory
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"

- name: Copy application sample report
  copy:
    src: "{{ logius_git_root }}/LogiusWebApp/src/main/resources/{{ item }}"
    remote_src: true
    dest: "{{ logius_app_res }}/{{ item }}"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"
  with_items:
    - "sample_report.ods"
    - "sample_configuration.cxml"

- name: Download and unpack the community Tanuki wrapper
  unarchive:
    src: "{{ tanuki_wrapper_url }}"
    dest: "{{ tmp_download }}"
    remote_src: True
    creates: "{{ tanuki_installer_dir }}"

- name: Copy the needed Tanuki files
  copy:
    src: "{{ tanuki_installer_dir }}{{ item.src }}"
    remote_src: true
    dest: "{{ item.dest }}"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"
  with_items:
    - { src: "/bin/wrapper", dest: "{{ logius_app_bin }}/wrapper" }
    - { src: "/lib/libwrapper.so", dest: "{{ logius_app_lib }}/libwrapper.so" }
    - { src: "/lib/wrapper.jar", dest: "{{ logius_app_lib }}/wrapper.jar" }

- name: Deploy application jars
  copy:
    src: "{{ logius_git_root }}/{{ item.src_app_name }}/target/{{ item.src_app_name }}{{ item.src_version }}.jar"
    remote_src: true
    dest: "{{ item.dest_dir }}/{{ item.dest_jar }}.jar"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"
  with_items:
    - { src_app_name: "LogiusWebApp", src_version: "-1.0-SNAPSHOT", dest_dir: "{{ logius_app_lib }}", dest_jar: "logius-web" }
    - { src_app_name: "VeraPDFService", src_version: "-1.0-SNAPSHOT", dest_dir: "{{ logius_app_lib }}", dest_jar: "verapdf-service" }
    - { src_app_name: "SampleWebApp", src_version: "-1.0-SNAPSHOT", dest_dir: "{{ logius_app_lib }}", dest_jar: "logius-sample" }
    - { src_app_name: "HeritrixExtention", src_version: "", dest_dir: "{{ logius_heritrix_home }}/lib", dest_jar: "logius-heritrix-extenstion" }

- name: Deploy service wrapper scripts
  template:
    src: "var/lib/logius/bin/app-wrapper.sh.j2"
    dest: "{{ logius_app_bin }}/{{ item.key }}"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"
  with_dict: "{{ vera_app_details }}"

- name: Place second server scripty block in
  blockinfile:
    path: "{{ logius_app_bin }}/{{ item.key }}"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"
    block: "{{ lookup('file', 'scriptend') }}"
  with_dict: "{{ vera_app_details }}"

- name: Deploy service configuration files
  template:
    src: "var/lib/logius/conf/wrapper.conf.j2"
    dest: "{{ logius_app_conf }}/{{ item.key }}.conf"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: "755"
  with_dict: "{{ vera_app_details }}"

- name: Add Web app configuration templates
  template:
    src: "var/lib/logius/conf/{{ item }}.yml.j2"
    dest: "{{ logius_app_conf }}/{{ item }}.yml"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: 0644
  with_items:
    - "logius-web"
    - "logius-sample"
    - "verapdf-service"

- name: Install veraPDF services
  command: "{{ logius_app_bin }}/{{ item.key }} install"
  args:
    creates: "/etc/init.d/{{ item.key }}"
  with_dict: "{{ vera_app_details }}"

- name: Add Web app startup scripts
  template:
    src: "var/lib/logius/{{ item }}.sh.j2"
    dest: "{{ logius_app_home }}/{{ item }}.sh"
    owner: "{{ logius_linux_user }}"
    group: "{{ logius_linux_group }}"
    mode: 0755
  with_items:
    - "run-heritrix"

- name: Create app DB Schema
  mysql_db:
    state: import
    name: "logius"
    target: "{{ logius_git_root }}/LogiusWebApp/src/main/resources/sql/schema.sql"
  when: logius_db_create_schema

- name: Setup default properties
  mysql_db:
    state: import
    name: "logius"
    target: "{{ logius_git_root }}/LogiusWebApp/src/main/resources/sql/pdf_properties_base_settings.sql"
  when: logius_db_create_schema

- name: Remove default nginx site
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
